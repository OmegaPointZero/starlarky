load("@stdlib//io", io="io")
load("@stdlib//unittest", "unittest")
load("@stdlib//zipfile", "ZipFile")
load("@vendor//asserts", "asserts")

test_zip = bytes([0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x49, 0x6b, 0x75, 0x56, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x20, 0x00, 0x74, 0x65, 0x73, 0x74,
                  0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xeb, 0x12, 0x1a, 0x64, 0xec, 0x12, 0x1a, 0x64,
                  0xeb, 0x12, 0x1a, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf6, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00,
                  0x00, 0x00, 0x0b, 0x49, 0x2d, 0x2e, 0x51, 0xc8, 0xcc, 0x2b, 0x28, 0x2d, 0xe1, 0x02, 0x00, 0x50, 0x4b,
                  0x07, 0x08, 0xed, 0x41, 0xdd, 0x21, 0x0d, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x03,
                  0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x45, 0x69, 0x76, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x20, 0x00, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x32, 0x2e,
                  0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xa3, 0x60, 0x1b, 0x64, 0xa5, 0x60, 0x1b, 0x64, 0xa3,
                  0x60, 0x1b, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf6, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00,
                  0x00, 0x73, 0x2d, 0x4b, 0xcd, 0x53, 0xf0, 0xf5, 0x0f, 0x72, 0x55, 0x08, 0x49, 0x2d, 0x2e, 0x51, 0xc8,
                  0xcc, 0x2b, 0x28, 0x2d, 0xe1, 0x02, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x25, 0x3c, 0x8f, 0x7b, 0x17, 0x00,
                  0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00, 0x08,
                  0x00, 0x49, 0x6b, 0x75, 0x56, 0xed, 0x41, 0xdd, 0x21, 0x0d, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
                  0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00,
                  0x00, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xeb, 0x12, 0x1a,
                  0x64, 0xec, 0x12, 0x1a, 0x64, 0xeb, 0x12, 0x1a, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf6, 0x01,
                  0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00,
                  0x08, 0x00, 0x45, 0x69, 0x76, 0x56, 0x25, 0x3c, 0x8f, 0x7b, 0x17, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00,
                  0x00, 0x0a, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x63, 0x00,
                  0x00, 0x00, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x32, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07,
                  0xa3, 0x60, 0x1b, 0x64, 0xa5, 0x60, 0x1b, 0x64, 0xa3, 0x60, 0x1b, 0x64, 0x75, 0x78, 0x0b, 0x00, 0x01,
                  0x04, 0xf6, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00,
                  0x00, 0x02, 0x00, 0x02, 0x00, 0xae, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00])


def test_zipfile():
    zip = ZipFile(io.BytesIO(test_zip))
    print("\n" + str(zip.infolist()).replace(", ", ",\n"))
def _testsuite():
    _suite = unittest.TestSuite()
    _suite.addTest(unittest.FunctionTestCase(test_zipfile))
    return _suite

_runner = unittest.TextTestRunner()
_runner.run(_testsuite())